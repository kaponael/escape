/* PAGE-SPECIFIC STYLES FOR THE HOME PAGE */

/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	#services-885 {
		/* remove the font family so the Stitch inherits the fonts from your global stylesheet */
		font-family: 'Roboto', 'Arial', sans-serif;
		padding: var(--sectionPadding);
		/* clips the svg wave from overflowing */
		overflow: hidden;
		position: relative;
		background-color: #f7f7f7;
		z-index: 1;

		.cs-container {
			width: 100%;
			/* changes to 1280px at tablet */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			flex-direction: column;
			align-items: center;
			/* 48px - 64px */
			gap: clamp(3rem, 6vw, 4rem);
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: center;
			width: 100%;
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: center;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: calc(650 / 16 * 1rem);
			margin: 0;
			color: var(--bodyTextColor);
		}

		.cs-card-group {
			width: 100%;
			margin: 0;
			padding: 0;
			display: grid;
			grid-template-columns: repeat(4, 1fr);
			/* 16px - 20px */
			gap: clamp(1rem, 2vw, 1.25rem);
			position: relative;
			z-index: 1;
		}

		.cs-item {
			list-style: none;
			width: 100%;
			margin: 0;
			padding: 0;
			grid-column: span 4;
		}

		.cs-link {
			text-align: center;
			text-decoration: none;
			width: 100%;
			height: calc(420 / 16 * 1rem);
			padding: calc(20 / 16 * 1rem);
			/* prevents padding from affecting height and width */
			box-sizing: border-box;
			border-radius: calc(16 / 16 * 1rem);
			/* clips img corners around the border */
			overflow: hidden;
			display: flex;
			flex-direction: column;
			justify-content: flex-end;
			gap: calc(12 / 16 * 1rem);
			position: relative;
		}

		.cs-h3 {
			font-size: calc(20 / 16 * 1rem);
			line-height: 1.2em;
			text-align: inherit;
			font-weight: 700;
			margin: 0;
			color: var(--bodyTextColorWhite);
		}

		.cs-item-p {
			font-size: calc(16 / 16 * 1rem);
			line-height: 1.5em;
			text-align: inherit;
			margin: 0;
			color: var(--bodyTextColorWhite);
		}

		.cs-background {
			width: 100%;
			height: 100%;
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			z-index: -1;
			object-fit: cover;

			&:before {
				/* gradient overlay */
				content: '';
				width: 100%;
				height: 100%;
				background: linear-gradient(0deg, #000000 10.13%, rgba(0, 0, 0, 0) 40.71%);
				opacity: 1;
				position: absolute;
				display: block;
				bottom: 0;
				left: 0;
				transition: height 0.3s;
			}

			img {
				height: 100%;
				width: 100%;
				/* Makes img tag act as a background image */
				object-fit: cover;
				position: relative;
				z-index: -1;
				transition: transform 0.6s;
			}
		}

		.cs-button-solid {
			font-size: calc(16 / 16 * 1rem);
			/* 46px - 56px */
			line-height: clamp(2.875em, 5.5vw, 3.5em);
			text-decoration: none;
			font-weight: 700;
			text-align: center;
			margin: 0;
			color: #fff;
			min-width: calc(150 / 16 * 1rem);
			padding: 0 calc(24 / 16 * 1rem);
			background-color: var(--primary);
			border-radius: calc(4 / 16 * 1rem);
			display: inline-block;
			position: relative;
			z-index: 1;
			/* prevents padding from adding to the width */
			box-sizing: border-box;

			&:before {
				content: '';
				position: absolute;
				height: 100%;
				width: 0%;
				background: #000;
				opacity: 1;
				top: 0;
				left: 0;
				z-index: -1;
				border-radius: calc(4 / 16 * 1rem);
				transition: width 0.3s;
			}

			&:hover {
				&:before {
					width: 100%;
				}
			}
		}

		.cs-wave {
			/* we're stretching the svg wider than the viewport so it's taller and has more of a presence */
			width: 320%;
			height: auto;
			display: block;
			position: absolute;
			left: 50%;
			bottom: 0;
			transform: translateX(-50%);
			z-index: -1;
		}
	}
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
	#services-885 {
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
		}

		.cs-item {
			grid-column: span 2;
		}
	}
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
	#services-885 {
		/* the padding grows with the screen width so as the svg gets taller it doesn't overlap the section */
		padding-bottom: 14vw;

		.cs-item {
			grid-column: span 1;
		}

		.cs-link {
			&:hover,
			&:focus-within {
				.cs-h3 {
					color: var(--primary);
					transform: translateY(0);
				}

				.cs-item-p {
					height: auto;
					opacity: 1;
					transform: translateY(0);
				}

				.cs-background {
					&:before {
						height: 180%;
					}
					img {
						transform: scale(1.1);
					}
				}
			}
		}

		.cs-h3 {
			/* transform down the same amount as the flex gap */
			transform: translateY(calc(12 / 16 * 1rem));
			transition: transform 0.3s, color 0.3s;
		}

		.cs-item-p {
			height: 0;
			opacity: 0;
			overflow: hidden;
			transform: translateY(calc(50 / 16 * 1rem));
			transition: height 0.3s, opacity 0.3s, transform 0.3s;
		}

		.cs-wave {
			width: 100%;
			left: 0;
			transform: none;
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
	body.dark-mode {
		#services-885 {
			background-color: rgba(#000, 20%);

			.cs-topper {
				color: var(--primaryLight);
			}
			.cs-title,
			.cs-text {
				color: var(--bodyTextColorWhite);
			}

			.cs-text {
				opacity: 0.8;
			}

			.cs-wave {
				path {
					fill: var(--dark);
				}
			}
		}
	}
}
                                

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0em) {
	#sbs-r {
		padding: var(--sectionPadding);

		.cs-container {
			width: 100%;
			max-width: calc(1280 / 16 * 1rem);
			margin: auto;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			row-gap: calc(40 / 16 * 1rem);
		}

		.cs-left {
			/* scaling the font size with the view width */
			font-size: min(2.31vw, 0.7em);
			/* using ems so we can use font size to scale the whole section */
			width: calc(631 / 16 * 1em);
			height: calc(636 / 16 * 1em);
			position: relative;
		}

		.cs-picture {
			border-radius: calc(24 / 16 * 1em);
			/* clips img tag corners */
			overflow: hidden;
			position: absolute;
			display: block;
			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				/* makes image act like a background image */
				object-fit: cover;
			}
		}

		.cs-picture1 {
			width: calc(522 / 16 * 1em);
			height: calc(581 / 16 * 1em);
			right: 0;
			top: 0;
		}

		.cs-picture2 {
			width: calc(414 / 16 * 1em);
			height: calc(400 / 16 * 1em);
			background-color: #fff;
			box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 40px;
			/* 6px - 12px */
			border: clamp(0.375em, 1.5vw, 0.75em) solid #fff;
			left: 0;
			bottom: 0;
		}

		.cs-right {
			margin: auto;
			max-width: calc(542 / 16 * 1rem);
		}

		.cs-topper {
			text-align: left;
			margin-bottom: calc(4 / 16 * 1rem);
		}

		.cs-title {
			text-align: left;
			max-width: calc(800 / 16 * 1rem);
		}

		.cs-text {
			text-align: left;
			max-width: calc(750 / 16 * 1rem);
			margin-bottom: calc(16 / 16 * 1rem);
			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-flex-group {
			/* 16px - 32px */
			padding: clamp(1rem, 3vw, 2rem);
			background-color: #f7f7f7;
			border-radius: calc(16 / 16 * 1rem);
			position: relative;
		}

		.cs-flex-p {
			/* 14px - 16px */
			font-size: clamp(0.875rem, 1.5vw, 1rem);
			line-height: 1.5em;
			margin: 0 0 calc(16 / 16 * 1rem);
			color: #353535;
		}

		.cs-name {
			font-size: calc(16 / 16 * 1rem);
			line-height: 1.2em;
			text-transform: uppercase;
			font-weight: bold;
			margin: 0 0 calc(4 / 16 * 1rem);
			color: var(--headerColor);
			display: block;
		}

		.cs-job {
			font-size: calc(14 / 16 * 1rem);
			line-height: 1.5em;
			color: #353535;
			display: block;
		}

		.cs-quote-icon {
			/* 60px - 136px */
			width: clamp(3.75rem, 10vw, 8.5rem);
			height: auto;
			position: absolute;
			bottom: calc(0 / 16 * 1rem);
			/* 16px - 32px */
			right: clamp(1rem, 4vw, 2rem);
		}
	}
}

/* Desktop - 1024px */
@media only screen and (min-width: 64em) {
	#sbs-r {
		.cs-container {
			flex-flow: row;
			justify-content: space-between;
			gap: calc(52 / 16 * 1rem);
		}

		.cs-left {
			font-size: min(1.2vw, 1em);
			flex: none;
			/* sends it to the right */
			order: 2;
		}

		.cs-right {
			margin: 0;
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0em) {
	body.dark-mode {
		#sbs-r {
			.cs-left {
				&:before,
				&:after {
					background: var(--accent);
				}
			}

			.cs-picture2 {
				background-color: var(--dark);
				/* 6px - 12px */
				border: clamp(0.375em, 1.5vw, 0.75em) solid var(--dark);
			}

			.cs-topper {
				color: var(--primaryLight);
			}

			.cs-title,
			.cs-text,
			.cs-h3,
			.cs-flex-p,
			.cs-name {
				color: var(--bodyTextColorWhite);
			}

			.cs-flex-group {
				background-color: var(--accent);
			}

			.cs-job {
				color: var(--bodyTextColorWhite);
				opacity: 0.8;
			}

			.cs-quote-icon {
				opacity: 0.2;
			}
		}
	}
}

/*-- -------------------------- -->
<---            FAQ             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {

    #faq-489 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        background: #FAFBFC;
        
        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: calc(550 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
            /* 40px - 48px */
            gap: clamp(2.5rem, 5vw, 3rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }

        .cs-color {
            color: var(--primary);
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
        }
    
        .cs-title {
            /* cs-title override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This second cs-text is a section specific override that stays inside this stitch */
            /* 17 characters wide including spaces */
            max-width: 17ch;
        }

        .cs-text {
            /* cs-text override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This second cs-text is a section specific override that stays inside this stitch */
            /* 32px - 48px */
            margin-bottom: clamp(2rem, 3vw, 3rem);
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(24 / 16 * 1rem);
            background-color: var(--primary);
            border-radius: calc(4 / 16 * 1rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;
        
            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: calc(4 / 16 * 1rem);
                transition: width .3s;
            }
        
            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-faq-group {
            max-width: calc(740 / 16 * 1rem);
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: calc(20 / 16 * 1rem);
        }

        .cs-faq-item {
            list-style: none;
            width: 100%;
            /* prevents border from affecting width and height */
            box-sizing: border-box;
            border: 1px solid #F1F1F4;
            transition: border .3s, padding .3s, border-color .3s;

            &:hover {
                border-color: var(--primary);
            }

            &.active {
                padding-bottom: calc(16 / 16 * 1rem);
                border-color: var(--primary);
                .cs-button {
                    color: var(--primary);
                    &:before {
                        transform: translateY(-50%) rotate(180deg);
                        opacity: 0;
                        background-color: var(--primary);
                    }
                    &:after {
                        transform: translateY(-50%) rotate(360deg);
                        background-color: var(--primary);
                    }
                }
                .cs-item-p {
                    height: auto;
                    margin-top: 8/16rem;
                    opacity: 1;
                }
            }
        }

        .cs-button {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 1vw, 1.5625rem);
            line-height: 1.2em;
            text-align: left;
            font-weight: bold;
            padding: calc(16 / 16 * 1rem) calc(24 / 16 * 1rem);
            border: none;
            background: transparent;
            color: var(--headerColor);
            display: block;
            width: 100%;
            position: relative;
            transition: background-color .3s, color .3s;

            &:hover {
                cursor: pointer;
            }

            &:before {
                /* horizontal line */
                content: '';
                width: calc(16 / 16 * 1rem);
                height: calc(3 / 16 * 1rem);
                background-color: currentColor;
                opacity: 1;
                border-radius: 1px;
                position: absolute;
                display: block;
                top: 50%;
                right: calc(24 / 16 * 1rem);
                transform: translateY(-50%);
                transition: transform .5s, opacity .3s;
            }

            &:after {
                /* vertical line */
                content: '';
                width: calc(16 / 16 * 1rem);
                height: calc(3 / 16 * 1rem);
                background-color: currentColor;
                opacity: 1;
                border-radius: 1px;
                position: absolute;
                display: block;
                top: 50%;
                right: calc(24 / 16 * 1rem);
                transform: translateY(-50%) rotate(90deg);
                transform-origin: center;
                transition: transform .5s;
            }
        }

        .cs-button-text {
            width: 80%;
            display: block;
        }

        .cs-item-p {
            /* 14px - 16px */
            font-size: clamp(.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            width: 90%;
            height: 0;
            margin: 0;
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            padding: 0 calc(24 / 16 * 1rem);
            opacity: 0;
            color: var(--bodyTextColor);
            /* clips the text so it doesn't show up */
            overflow: hidden;
            transition: opacity .3s, padding-bottom .3s;
        }
    }

}

/* Desktop - 1024px */
@media only screen and (min-width: 48rem) {
    #faq-489 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-start;
            gap: calc(52 / 16 * 1rem);
        }

        .cs-content {
            margin-top: calc(50 / 16 * 1rem);
        }

        .cs-title, .cs-topper {
            text-align: left;
            margin-left: 0;
        }

        .cs-faq-group {
            width: clamp(56%, 58vw, 58%);
            flex: none;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #faq-489 {
            background-color: rgba(0, 0, 0, .2);
            .cs-topper {
                color: var(--primaryLight);
            }

            .cs-title, .cs-text, .cs-item-p {
                color: var(--bodyTextColorWhite);
            }

            .cs-text, .cs-item-p {
                opacity: .8;
            }

            .cs-faq-item {
                border-color: rgba(255, 255, 255, .2);
                &:hover {
                    border-color: var(--primary);
                }
                &.active {
                    border-color: var(--primaryLight);
                    .cs-button {
                        color: var(--primaryLight);
                        &:before, &:after {
                            background-color: var(--primaryLight);
                        }
                    }
                }
            }

            .cs-button {
                color: var(--bodyTextColorWhite);
                &:before, &:after {
                    background-color: var(--bodyTextColorWhite);
                }
            }
        }
    }
}
                                